/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aula1.Visao;

import aula1.Controlador.ProdutoController;
import aula1.Controlador.ProdutoPedidoController;
import com.google.gson.Gson;
import com.google.gson.JsonObject;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Italo
 */
public class ProdutoPedido extends javax.swing.JFrame {

    private JsonObject codigoToProduto;
    private JsonObject produtoToDetalhes;

    /**
     * Creates new form ProdutoPedido
     *
     * @param codigoPedido
     */
    public ProdutoPedido(String codigoPedido) {
        initComponents();
        textCodigoPedido.setText(codigoPedido);

        desabilitarComponentes();
        carregarProdutos();
        carregarTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        textCodigoPedido = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        comboProduto = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProdutos = new javax.swing.JTable();
        buttonNovo = new javax.swing.JButton();
        buttonEditar = new javax.swing.JButton();
        buttonExcluir = new javax.swing.JButton();
        buttonSalvar = new javax.swing.JButton();
        buttonCancelar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        textQuantidade = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        textValorTotal = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        textCodigo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        textValor = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Pedido");

        textCodigoPedido.setEditable(false);

        jLabel2.setText("Produto");

        comboProduto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tableProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Código", "Nome", "Valor", "Quantidade", "Valor total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableProdutosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableProdutos);

        buttonNovo.setText("Novo");
        buttonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNovoActionPerformed(evt);
            }
        });

        buttonEditar.setText("Editar");
        buttonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditarActionPerformed(evt);
            }
        });

        buttonExcluir.setText("Excluir");
        buttonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExcluirActionPerformed(evt);
            }
        });

        buttonSalvar.setText("Salvar");
        buttonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSalvarActionPerformed(evt);
            }
        });

        buttonCancelar.setText("Cancelar");
        buttonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelarActionPerformed(evt);
            }
        });

        jLabel3.setText("Quantidade");

        jLabel4.setText("Valor total");

        textValorTotal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                textValorTotalFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                textValorTotalFocusLost(evt);
            }
        });

        jLabel5.setText("Código");

        textCodigo.setEditable(false);

        jLabel6.setText("Valor");

        textValor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                textValorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                textValorFocusLost(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textCodigo)
                                .addGap(10, 10, 10)
                                .addComponent(jLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textValor, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(textCodigoPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comboProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(12, 12, 12))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonCancelar)
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textCodigoPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(comboProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(textCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(textQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(textValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(textValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonNovo)
                    .addComponent(buttonEditar)
                    .addComponent(buttonExcluir)
                    .addComponent(buttonSalvar)
                    .addComponent(buttonCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableProdutosMouseClicked
        int linha = tableProdutos.getSelectedRow();
        if (linha == -1) {
            return;
        }

        DefaultTableModel m = (DefaultTableModel) tableProdutos.getModel();

        String codigo = m.getValueAt(linha, 0).toString();
        String json = ProdutoPedidoController.recuperar(codigo);

        JsonObject dados = new Gson().fromJson(json, JsonObject.class);

        textCodigo.setText(dados.get("codigo").getAsString());
        comboProduto.setSelectedItem(codigoToProduto.get(dados.get("codigoProduto").getAsString()).getAsString());
        textQuantidade.setText(dados.get("quantidade").getAsString());
        textValor.setText(dados.get("valor").getAsString());
        textValorTotal.setText(dados.get("valorTotal").getAsString());
    }//GEN-LAST:event_tableProdutosMouseClicked

    private void buttonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNovoActionPerformed
        limparComponentes();
        habilitarComponentes();
    }//GEN-LAST:event_buttonNovoActionPerformed

    private void buttonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditarActionPerformed
        int linha = tableProdutos.getSelectedRow();
        if (linha == -1) {
            return;
        }

        habilitarComponentes();
    }//GEN-LAST:event_buttonEditarActionPerformed

    private void buttonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExcluirActionPerformed
        desabilitarComponentes();

        int linha = tableProdutos.getSelectedRow();
        if (linha == -1) {
            return;
        }

        DefaultTableModel m = (DefaultTableModel) tableProdutos.getModel();

        String codigo = (String) m.getValueAt(linha, 0);
        ProdutoPedidoController.excluir(codigo);

        JOptionPane.showMessageDialog(this, "Operação executada com sucesso", "Sucesso",
                JOptionPane.PLAIN_MESSAGE);

        m.removeRow(linha);
    }//GEN-LAST:event_buttonExcluirActionPerformed

    private void buttonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSalvarActionPerformed
        desabilitarComponentes();

        int linha = tableProdutos.getSelectedRow();
        DefaultTableModel m = (DefaultTableModel) tableProdutos.getModel();

        if (linha == -1) {
            m.addRow(new Object[]{null, null, null, null, null});
            linha = m.getRowCount() - 1;
        }

        JsonObject dados = new JsonObject();
        dados.addProperty("codigo", textCodigo.getText());
        dados.addProperty("codigoPedido", textCodigoPedido.getText());
        String produto = comboProduto.getSelectedItem().toString();
        String codigoProduto = produtoToDetalhes.get(produto).getAsJsonObject().get("codigo").getAsString();
        dados.addProperty("codigoProduto", codigoProduto);
        dados.addProperty("quantidade", textQuantidade.getText());
        dados.addProperty("valor", textValor.getText());
        dados.addProperty("valorTotal", textValorTotal.getText());
        String json = ProdutoPedidoController.salvar(dados.toString());

        JsonObject result = new Gson().fromJson(json, JsonObject.class);

        if (result.has("mensagem")) {
            JOptionPane.showMessageDialog(this, result.get("mensagem").getAsString(),
                    "Erro", JOptionPane.ERROR_MESSAGE);
            habilitarComponentes();
            return;
        }

        m.setValueAt(result.get("codigo").getAsString(), linha, 0);
        m.setValueAt(comboProduto.getSelectedItem().toString(), linha, 1);
        m.setValueAt(textValor.getText(), linha, 2);
        m.setValueAt(textQuantidade.getText(), linha, 3);
        m.setValueAt(textValorTotal.getText(), linha, 4);
    }//GEN-LAST:event_buttonSalvarActionPerformed

    private void buttonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelarActionPerformed
        limparComponentes();
        desabilitarComponentes();
    }//GEN-LAST:event_buttonCancelarActionPerformed

    private void preencherValor() {
        if (textValor.getText().trim().isEmpty() || textValor.getText().equals("0")) {
            String produto = comboProduto.getSelectedItem().toString();
            String preco = produtoToDetalhes.get(produto).getAsJsonObject().get("preco").getAsString();
            textValor.setText(preco);
        }
    }

    private void textValorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textValorFocusGained
        preencherValor();
    }//GEN-LAST:event_textValorFocusGained

    private void textValorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textValorFocusLost
        preencherValor();
    }//GEN-LAST:event_textValorFocusLost

    private void textValorTotalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textValorTotalFocusGained
        preencherValorTotal();
    }//GEN-LAST:event_textValorTotalFocusGained

    private void textValorTotalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textValorTotalFocusLost
        preencherValorTotal();
    }//GEN-LAST:event_textValorTotalFocusLost

    private void preencherValorTotal() {
        if (textValorTotal.getText().trim().isEmpty() || textValorTotal.getText().equals("0")) {
            int quantidade = Integer.parseInt(textQuantidade.getText());
            double preco = Double.parseDouble(textValor.getText());
            textValorTotal.setText(String.valueOf(quantidade * preco));
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancelar;
    private javax.swing.JButton buttonEditar;
    private javax.swing.JButton buttonExcluir;
    private javax.swing.JButton buttonNovo;
    private javax.swing.JButton buttonSalvar;
    private javax.swing.JComboBox<String> comboProduto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableProdutos;
    private javax.swing.JTextField textCodigo;
    private javax.swing.JTextField textCodigoPedido;
    private javax.swing.JTextField textQuantidade;
    private javax.swing.JTextField textValor;
    private javax.swing.JTextField textValorTotal;
    // End of variables declaration//GEN-END:variables

    private void configurarComponentes(boolean ativo) {
        textCodigoPedido.setEditable(ativo);
        textValor.setEditable(ativo);
        textValorTotal.setEditable(ativo);
        textQuantidade.setEditable(ativo);
        comboProduto.setEnabled(ativo);

        buttonNovo.setEnabled(!ativo);
        buttonEditar.setEnabled(!ativo);
        buttonSalvar.setEnabled(ativo);
        buttonCancelar.setEnabled(ativo);

        tableProdutos.setEnabled(!ativo);
    }

    private void desabilitarComponentes() {
        configurarComponentes(false);
    }

    private void carregarProdutos() {
        String jsonProdutoToCodigo = ProdutoController.produtoToDetalhes();
        produtoToDetalhes = new Gson().fromJson(jsonProdutoToCodigo, JsonObject.class);

        String jsonCodigoToProduto = ProdutoController.codigoToProduto();
        codigoToProduto = new Gson().fromJson(jsonCodigoToProduto, JsonObject.class);

        comboProduto.removeAllItems();

        for (String prod : produtoToDetalhes.keySet()) {
            comboProduto.addItem(prod);
        }
    }

    private void carregarTabela() {
        DefaultTableModel m = (DefaultTableModel) tableProdutos.getModel();
        m.setRowCount(0);

        List<String> colecao = ProdutoPedidoController.recuperarTodos(textCodigoPedido.getText());

        for (String json : colecao) {
            JsonObject dados = new Gson().fromJson(json, JsonObject.class);
            Object[] linha = {
                dados.get("codigo").getAsString(),
                codigoToProduto.get(dados.get("codigoProduto").getAsString()).getAsString(),
                dados.get("valor").getAsString(),
                dados.get("quantidade").getAsString(),
                dados.get("valorTotal").getAsString()
            };
            m.addRow(linha);
        }
    }

    private void limparComponentes() {
        textCodigo.setText("0");
        textValor.setText("0");
        textValorTotal.setText("0");
        textQuantidade.setText("0");
        tableProdutos.clearSelection();
    }

    private void habilitarComponentes() {
        configurarComponentes(true);
    }
}
